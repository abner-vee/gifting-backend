name: Deploy File Service to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up SSH Agent
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" | sed 's/\r$//' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          chmod 700 ~/.ssh
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa
          ssh-add -l  # Verify key is loaded

      - name: Debug SSH Connection
        run: |
          ssh -o StrictHostKeyChecking=no -v ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "echo 'SSH Connection Success'"

      - name: Copy project to EC2
        run: |
          rsync -avz --delete --progress --exclude 'node_modules' --exclude '.git' -e "ssh -o StrictHostKeyChecking=no" ./ ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/auth-server

      - name: SSH into EC2 and deploy
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e  # Stop script if any command fails
          
            cd /home/${{ secrets.EC2_USER }}/auth-server
          
            # Ensure Node.js is installed (if not already)
            node -v || curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash - && sudo apt-get install -y nodejs
          
            # Install dependencies and build the project
            npm install --legacy-peer-deps
            npm run build --legacy-peer-deps  # âœ… Generates the "dist" folder
          
            # Write .env file
            echo "${{ secrets.ENV_FILE }}" > .env
          
            # Build and run Docker container
            docker stop ${{ secrets.PROJECT_NAME }} || true
            docker rm ${{ secrets.PROJECT_NAME }} || true
            docker build -t ${{ secrets.PROJECT_NAME }} .
            docker run -d --name ${{ secrets.PROJECT_NAME }} -p 5001:5001 --env-file .env ${{ secrets.PROJECT_NAME }}
          EOF